<div class="container">
  <div class="call-to-action mt-24 mb-32 flex flex-col items-center gap-12 rounded-xl p-12 md:p-24">
    <h2 class="text-center text-3xl md:text-5xl">Continue on GitHub</h2>
    <a href="https://github.com/lissy93/git-into-open-source" class="text-center text-lg">Let's go!</a>
  </div>
</div>

<style lang="scss">
  // Define your color variables for light and dark mode
  $light-mode-color: var(--neutral-900);
  $dark-mode-color: var(--neutral-100);

  .call-to-action {
    // Set default background and text color for light mode
    color: $light-mode-color;
    background-image: linear-gradient(40deg, var(--primary-100), var(--secondary-200));
  }

  .call-to-action a:not(button),
  .call-to-action a:not(button):visited {
    padding: 1rem;
    color: $light-mode-color; // Set default text color for light mode
    font-weight: bold;
    border: 3px solid $light-mode-color; // Set default border color for light mode
    border-radius: 3px;
    text-decoration: none;
    transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out;

    &:where(:hover, :focus) {
      color: $dark-mode-color; // Change text color on hover/focus for dark mode
      background-color: $light-mode-color; // Change background color on hover/focus for light mode
      text-decoration: underline;
    }
  }

  // Add styles for dark mode
  // This assumes that you have a class like 'dark-mode' added to the body when dark mode is active
  .dark-mode {
    .call-to-action {
      color: $dark-mode-color;
      background-image: linear-gradient(40deg, var(--dark-primary-100), var(--dark-secondary-200));
    }

    .call-to-action a:not(button),
    .call-to-action a:not(button):visited {
      color: $dark-mode-color;
      border: 3px solid $dark-mode-color;
      background-color: $light-mode-color; // Use light mode background color for dark mode
    }
  }
</style>
